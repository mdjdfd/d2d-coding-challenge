plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.d2d.challenge"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "com.d2d.challenge.d2dTestRunner"

        buildConfigField "String", "WEB_SOCKET_ENDPOINT", "\"wss://d2d-frontend-code-challenge.herokuapp.com\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
    kapt {
        generateStubs = true
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

ext {
    // Library Version (Android)
    app_compat_version = '1.2.0'
    material_version = '1.3.0'
    androidx_version = '1.0.0'
    arch_components_version = '2.0.0-rc01'
    lifecycle_version = '2.2.0-alpha04'
    ktx_version = '1.3.2'
    activity_ktx_version = '1.1.0'
    constraint_layout_version = '2.0.4'


    // Library Version (Third party)
    hilt_viewmodel_version = '1.0.0-alpha03'
    lifecycle_viewmodel_version = '2.2.0'
    lifecycle_extensions_version = '1.1.1'
    rx_java_version = '2.2.1'
    rx_kotlin_version = '2.2.0'
    rx_android_version = '2.1.0'
    okhttp_version = '3.12.0'
    okhttp_logging_interceptor_version = '4.7.2'
    coroutines_version = '1.3.1'
    gson_version = '2.8.6'
    maps_version = '17.0.0'

    // Library Version (Testing)
    junit_version = '4.+'
    hilt_test_version = '2.33-beta'
    mockito_version = '3.3.3'
    espressocore_version= '3.3.0'
    androidx_test_version = '1.1.0'
    arch_core_version = '2.1.0'
    ext_junit_version = '1.1.2'
}

dependencies {
    implementation      fileTree(dir: 'libs', include: ['*.jar'])
    implementation      "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation      "androidx.core:core-ktx:$ktx_version"
    implementation      "androidx.appcompat:appcompat:$app_compat_version"
    implementation      "com.google.android.material:material:$material_version"
    implementation      "androidx.annotation:annotation:$androidx_version"
    implementation      "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt                "androidx.lifecycle:lifecycle-compiler:$arch_components_version"

    implementation      "android.arch.lifecycle:extensions:$lifecycle_extensions_version"
    implementation      "androidx.activity:activity-ktx:$activity_ktx_version"
    implementation      "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    //Third party library dependencies
    
    implementation      "com.google.dagger:hilt-android:$hilt_version"
    kapt                "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation      "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodel_version"
    kapt                "androidx.hilt:hilt-compiler:$hilt_viewmodel_version"

    implementation      "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_version"
    implementation      "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation      "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    implementation      "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"

    implementation      "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation      "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation      "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation      "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version"
    implementation      "com.google.code.gson:gson:$gson_version"

    //Google maps dependencies
    implementation      "com.google.android.gms:play-services-maps:$maps_version"



    //Testing dependencies

    testImplementation              "junit:junit:$junit_version"
    androidTestImplementation       "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation       "androidx.arch.core:core-testing:$arch_core_version"
    androidTestImplementation       "androidx.test:runner:$androidx_test_version"
    androidTestImplementation       "androidx.test:rules:$androidx_test_version"
    androidTestImplementation       "androidx.test.espresso:espresso-core:$espressocore_version"

    androidTestImplementation       "com.google.dagger:hilt-android-testing:$hilt_test_version"
    kaptAndroidTest                 "com.google.dagger:hilt-android-compiler:$hilt_test_version"


    testImplementation              "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation       "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    androidTestImplementation       "org.mockito:mockito-android:$mockito_version"

}